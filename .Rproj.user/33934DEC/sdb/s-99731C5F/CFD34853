{
    "collab_server" : "",
    "contents" : "#' plot simulation results from a dec.sim object\n#' @description Three plots are currently available: a plot of true toxicity at each dose level (\\code{type = \"s\"}); a bar plot of the probability of selecting as the MTD for each dose level (\\code{type = \"prob\"}); a bar plot of the average number of patients treated at each dose level (\\code{type = \"np\"}); a bar plot of the average number of patients experienced DLT at each dose level (\\code{type = \"dlt\"}) and \\code{type = \"all\"} generates all above plots.\n#' @param x an object of class \\code{\"dec.sim\"} or \\code{\"sl.sim\"}, a result of a call to \\code{dec.sim} or \\code{sl.sim}.\n#' @param pt a vector with target toxicity for each scenario.\n#' @param s scenario to be plotted. Defaults to 1.\n#' @param type plot type. See descriptions above.\n#' @param show a logical value indicating if values are shown on plot.\n#' @param col graphical parameter \\code{col}; see details \\code{\\link{par}}.\n#' @param text.col plotting color of text shown.\n#' @param cex graphical parameter \\code{col}; see details \\code{\\link{par}}.\n#' @param ... arguments to be passed to \\code{\\link{plot}} methods.\n#' @import graphics\n#' @export\n\nplot.dec.sim <- function(x, pt, s = 1, type = c(\"all\", \"s\", \"prob\", \"np\", \"dlt\"), show = TRUE, col = \"cornflowerblue\", text.col = \"darkblue\", cex = 1, ...) {\n  # check\n  type <- match.arg(type)\n  if(class(x)[1] == \"sl.sim\") {\n    obj <- x[[s]]\n    ns <- length(x)\n  } else {\n    obj <- x\n    ns <- 1\n  }\n  if(length(pt) != ns) {\n    stop(\"true toxicity is a vector with length = # of cenarios\")\n  }\n  # initialization\n  truep <- obj$truep\n  n_dose <- length(truep)\n  names.arg <- 1:n_dose\n  scen <- paste(\"( Scenario\", s, \")\")\n  if(missing(pt)) {\n    warning(\"true toxicity is missing\")\n  } else {\n    mtd <- max(which(truep <= pt[s]))\n    names.arg[mtd] <- paste(mtd, \"(MTD)\")\n  }\n  # plot as specified \"type\"\n  if(type == \"all\") {\n    par(mfrow = c(2,2), cex = cex)\n    plot(x, pt, s, \"s\", show, col, text.col, cex, ...)\n    plot(x, pt, s, \"prob\", show, col, text.col, cex, ...)\n    plot(x, pt, s, \"dlt\", show, col, text.col, cex, ...)\n    plot(x, pt, s, \"np\", show, col, text.col, cex, ...)\n  }\n  if(type == \"prob\") {\n    ans <- obj$mtd.prob\n    out <- barplot(rep(NA, n_dose), xlab = \"Dose level\", names.arg = names.arg,  panel.first = box(), ylim = c(0, max(ans) * 1.1))\n    grid()\n    barplot(ans, add = TRUE, col = col)\n    title(paste(\"Probability of selection\", scen))\n    if(show){\n      text(out, ans, labels = ans, pos = 3, cex = cex, col = text.col)\n    }\n  }\n  if(type == \"dlt\") {\n    ans <- obj$dlt\n    out <- barplot(rep(NA, n_dose), xlab = \"Dose level\", names.arg = names.arg,  panel.first = box(), ylim = c(0, max(ans) * 1.1))\n    grid()\n    barplot(ans, add = TRUE, col = col)\n    title(paste(\"Average number of DLTs\", scen))\n    if(show){\n      text(out, ans, labels = ans, pos = 3, cex = cex, col = text.col)\n    }\n  }\n  if(type == \"np\") {\n    ans <- obj$n.patients\n    out <- barplot(rep(NA, n_dose), xlab = \"Dose level\", names.arg = names.arg,  panel.first = box(), ylim = c(0, max(ans) * 1.1))\n    grid()\n    barplot(ans, add = TRUE, col = col)\n    title(paste(\"Average number of patients\", scen))\n    if(show){\n      text(out, ans, labels = ans, pos = 3, cex = cex, col = text.col)\n    }\n  }\n  if(type == \"s\") {\n    out <- plot(1:n_dose, truep, xlab = \"Dose level\", ylab=\"\", col = col, type = \"b\", ylim = c(min(truep) * 0.9, max(truep) * 1.1), xaxt=\"n\", pch = 19, panel.first = c(box(), grid()))\n    axis(1, at = 1:n_dose, labels = names.arg)\n    title(paste(\"True toxicity\", scen))\n    if(!missing(pt)) {\n      abline(pt[s], 0, lty = 5)\n      text(n_dose/2, pt[s], labels = paste(\"Target =\", pt[s]), pos = 3, cex = cex, col = text.col)\n    }\n    if(show){\n      text(1:n_dose, truep, labels = truep, pos = 3, cex = cex, col = text.col)\n    }\n  }\n}\n\n",
    "created" : 1500322427294.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1634685528",
    "id" : "CFD34853",
    "lastKnownWriteTime" : 1500405331,
    "last_content_update" : 1500405331668,
    "path" : "C:/Users/wguo25/Desktop/Package/tsdf/R/plot.dec.sim.R",
    "project_path" : "R/plot.dec.sim.R",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}